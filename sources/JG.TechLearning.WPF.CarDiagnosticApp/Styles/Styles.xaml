<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:conv="clr-namespace:JG.TechLearning.WPF.CarDiagnostic.Converter;assembly=JG.TechLearning.WPF.CarDiagnostic.Converter"
                    xmlns:ctrl="clr-namespace:JG.TechLearning.WPF.CarDiagnostic.UserControlNS.Controls;assembly=JG.TechLearning.WPF.CarDiagnostic.UserControl"
                    xmlns:common="clr-namespace:JG.TechLearning.WPF.CarDiagnostic.GlobalCommonTypes;assembly=JG.TechLearning.WPF.CarDiagnostic.GlobalCommonTypes">

    <conv:AngleToPointConverter x:Key="angleToPointConv"/>
    <conv:IsAngleLargerThan180Converter x:Key="largerThan180"/>
    <conv:SeverityToBrushConverter x:Key="severityToBrushConv"/>

    <Style x:Key="circularProgressBar" TargetType="ctrl:CircularProgressBar">
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="StrokeThickness" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:CircularProgressBar">
                    <Canvas Width="100" Height="100">
                        <Ellipse 
                            Width="100" 
                            Height="100" 
                            Stroke="{StaticResource BlueBrush}"
                            StrokeThickness="1"/>

                        <Path Stroke="{StaticResource BlueBrush}" 
                                  StrokeThickness="{TemplateBinding StrokeThickness}">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="50,0">
                                        <ArcSegment SweepDirection="Clockwise"
                                                    Size="50,50"
                                                    Point="{Binding Path=Angle, Converter={StaticResource angleToPointConv}, RelativeSource={RelativeSource FindAncestor, AncestorType=ProgressBar}}"
                                                    IsLargeArc="{Binding Path=Angle, Converter={StaticResource largerThan180}, RelativeSource={RelativeSource FindAncestor, AncestorType=ProgressBar}}">
                                        </ArcSegment>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Border Width="100" Height="100">
                            <TextBlock Foreground="{StaticResource BlueBrush}" 
                                       HorizontalAlignment="Center" 
                                       VerticalAlignment="Center"
                                       Text="{Binding Path=Value, StringFormat={}{0}%, 
                                       RelativeSource={RelativeSource TemplatedParent}}"
                                       FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                    </Canvas>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListView- Style -->
    <Style x:Key="LogListViewLogStyle" TargetType="{x:Type ctrl:AutoScrollingListView}">
        <Setter Property="IsEnabled" Value="False"></Setter>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="White"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"></Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
    </Style>

    <Style x:Key="LogItemContainerStyle" TargetType="ListViewItem">
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type common:LogInfoItem}">
                    <DockPanel Background="Transparent">
                        <Ellipse Stroke="{StaticResource BackgroundLightBrush}" Height="15" Width="15" Fill="{Binding Path=Severity, Converter={StaticResource severityToBrushConv}}"></Ellipse>
                        <TextBlock TextWrapping="Wrap" Text="{Binding TimeStampAndMessage}" Margin="2,0,0,0"></TextBlock>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource DarkBlueBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ListView new template-->
    <ControlTemplate x:Key="LogListViewNewTemplate" TargetType="{x:Type ctrl:AutoScrollingListView}">
        <Border x:Name="Bd" BorderBrush="Transparent" BorderThickness="0" Background="White" Padding="1" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="Scroller" Focusable="False" Padding="{TemplateBinding Padding}">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="True"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>